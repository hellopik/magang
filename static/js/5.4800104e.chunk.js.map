{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["Dashboard","dispatch","useDispatch","useState","collapse","setCollapse","datatable","setDatatable","nim","setNim","tglLahir","setTgllahir","modal","setModal","datatablemodal","setDatatablemodal","data","useSelector","state","useEffect","a","console","log","process","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","rows","type","map","x","tgl_lahir","nama","univ","status","update","warna","show","onClose","size","fields","label","key","items","scopedSlots","item","index","color","className","onClick","style","width","borderRadius","boxShadow","onChange","e","target","value","filter","length","sort","b","Date"],"mappings":"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","file":"static/js/5.4800104e.chunk.js","sourcesContent":["import React, { lazy, useEffect, useState} from 'react'\nimport {GoogleSpreadsheet} from 'google-spreadsheet'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CBadge, CButton, CCollapse, CDataTable, CFormGroup, CInput, CLabel, CModalBody, CModalFooter, CModal} from '@coreui/react'\n\nconst Dashboard = () => {\n\n  const dispatch = useDispatch()\n\n  const [collapse, setCollapse] = useState(false)\n  const [datatable, setDatatable] = useState([])\n  const [nim, setNim] = useState(\"\")\n  const [tglLahir, setTgllahir] = useState(\"\")\n  const [modal, setModal] = useState(false)\n  const [datatablemodal, setDatatablemodal] = useState([])\n\n  const data = useSelector((state)=>state.data)\n\n  useEffect(async()=>{\n    console.log(\"hihi\")\n    console.log(\"hehe\", process.env.REACT_APP_not_secret)\n    const doc = new GoogleSpreadsheet('13h9E09F-ZepAbk9_0BHqdjY-FZ6GgwZ0v6y5zrnzaxg');  \n    await doc.useServiceAccountAuth({\n      // env var values are copied from service account credentials generated by google\n      // see \"Authentication\" section in docs for more info\n      client_email: process.env.REACT_APP_client_email,\n      private_key: process.env.REACT_APP_not_secret,\n    });\n    await doc.loadInfo()\n    const sheet = doc.sheetsByIndex[0]\n    const rows = await sheet.getRows();\n    dispatch({type:'set',data:rows.map((x)=>{\n      return{\n        ['nim']:x.nim,\n        ['tgl_lahir']:x.tgl_lahir,\n        ['nama']:x.nama,\n        ['univ']:x.univ,\n        ['status']:x.status,\n        ['update']:x.update,\n        ['warna']:x.warna\n      }\n    })})\n\n  },[])\n\n  return(\n    <>\n    <CModal\n    show={modal}\n    onClose={()=>setModal(false)}\n    size=\"l\"\n    >\n      <CModalBody>\n        <CDataTable\n        fields={[\n          {label:'Status',key:'status'},\n          {label:'Waktu Update', key:'update'}\n        ]}\n        items={datatablemodal}\n        scopedSlots={{\n          'status':\n          (item, index)=>{\n            return(\n              <td>\n                <CBadge color={item.warna}>{item.status}</CBadge>\n              </td>\n            )\n          }\n        }}\n        />        \n      </CModalBody>\n      <CModalFooter>\n        <div className=\"d-flex flex-row justify-content-end\">\n          <div>\n            <CButton onClick={()=>setModal(false)} className=\"btn btn-danger\">Close</CButton>\n          </div>\n        </div>\n      </CModalFooter>\n    </CModal>\n\n    <div className=\"d-flex flex-row justify-content-center\">\n      <div className=\"card px-3 py-3\" style={{width:'70vw', borderRadius:'12px', boxShadow:'rgb(0 0 0 / 10%) 0px 2px 4px, rgb(0 0 0 / 10%) 0px 8px 16px'}}>\n        <div className=\"d-flex flex-row px-3 py-3\">\n          <div style={{width:'45%'}}>\n            <CFormGroup>\n              <CLabel>Nomor Induk Mahasiswa</CLabel>\n              <CInput onChange={(e)=>{\n                setNim(e.target.value)\n              }}/>\n            </CFormGroup>\n          </div>\n          <div className=\"ml-3\" style={{width:'45%'}}>\n            <CFormGroup>\n              <CLabel>Tanggal Lahir</CLabel>\n              <CInput onChange={(e)=>{\n                setTgllahir(e.target.value)\n              }} type=\"date\"/>\n            </CFormGroup>\n          </div> \n          <div className=\"ml-3 d-flex align-items-center mt-2\" style={{width:'5%'}}>\n            <CButton onClick={()=>{\n                let x = data.filter((x)=>x.nim === nim && x.tgl_lahir === tglLahir).length > 0\n                ? \n                [data.filter((x)=>x.nim === nim && x.tgl_lahir === tglLahir).sort((a,b)=>{\n                  return new Date(b.update) - new Date(a.update);\n                })[0]]\n                : \n                []\n                setCollapse(true)\n                // console.log(x)\n                setDatatable(x)\n            }} style={{borderRadius:'12px'}} className=\"btn btn-success\">\n              Trace\n            </CButton>\n          </div>                        \n        </div>\n      </div>      \n    </div>\n\n\n    <CCollapse\n    show={collapse}\n    >\n      <div className=\"card px-4 py-4\" style={{width:'100%', borderRadius:'12px', boxShadow:'rgb(0 0 0 / 10%) 0px 2px 4px, rgb(0 0 0 / 10%) 0px 8px 16px'}}>\n        <CDataTable\n        fields={[\n          {label:'Nomor Induk Mahasiswa', key:'nim'},\n          {label:'Tanggal Lahir', key:'tgl_lahir'},\n          {label:'Nama Mahasiswa', key:'nama'},\n          {label:'Universitas', key:'univ'},\n          {label:'Status Terakhir', key:'status'},\n          {label:'Update Terakhir', key:'update'},\n          {label:'Histori',key:'histori'}\n        ]}\n        items={datatable}\n        scopedSlots={{\n          'histori':\n          (item, index)=>{\n            return(\n              <td>\n                <CButton onClick={()=>{\n                  setDatatablemodal(data.filter((x)=>x.nim === nim && x.tgl_lahir === tglLahir).sort((a,b)=>{\n                    return new Date(b.update) - new Date(a.update);\n                  }))\n                  setModal(true)                  \n                }}className=\"btn btn-sm btn-primary\">Lihat</CButton>\n              </td>\n            )\n          },\n          'status':\n          (item, index)=>{\n            return(\n              <td>\n                <CBadge color={item.warna}>{item.status}</CBadge>\n              </td>\n            )\n          }\n        }}\n        />\n      </div>\n    </CCollapse>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}